一.java基础
 1.集合 List set Map（性能，优缺点，底层数据结构，原理，线程安全问题）
   字符串 String,StringBuffer,StringBulider,拼接，存储的过程与原理
 2.浮点数运算、比较大小
 3.io流  https://blog.csdn.net/sinat_37064286/article/details/86537354
   我用过的：
    File、
    outputStream、FileOutputStream、ByteArrayOutputStream、BufferedInputStream、MappedByteBuffer
    inputStream、FileInputStream、ByteArrayInputStream、BufferedOutputStream
    ZipInputStream/ZipOutputStream/ZipEntry等
 4.多线程
   -线程基础知识

   -各种锁的了解（深入了解）
     公平锁/非公平锁、乐观锁/悲观锁   使用与锁的状态

   -各种线程池的用法以及其原理（深入了解）
      ThreadPoolExecutor：
      https://www.jianshu.com/p/f030aa5d7a28
      https://blog.csdn.net/u014799292/article/details/90167096
      https://blog.csdn.net/USTC_Zn/article/details/54864244?utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromMachineLearnPai2%7Edefault-1.baidujs&dist_request_id=1329188.8887.16178936911542405&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromMachineLearnPai2%7Edefault-1.baidujs

   -并发编程
    常用的并发包下的类：
    线程池的使用
          ThreadPoolExecutor-自定义，更好地跟自己要写的代码契合
    线程安全对象
      * XXX<Y> coll = Collections.synchronizedXXX(new XXXX<>());//XXX为抽象集合，例如：List/Map; XXXX为XXX子类
       例如：Collections.synchronizedList(new LinkedList<>());Collections.synchronizedMap(new HashMap<K, V>());

      * new CopyOnWriteArrayList();/new CopyOnWriteArraySet();/自定义的CopyOnWriteMap/ConcurrentHashMap

    相关并发工具类
       并发工具类java.util.concurrent包下CountDownLatch
        用法：CountDownLatch latch = new CountDownLatch(count);//count 线程数
              然后再子线程执行完后调用 latch.countDown(); //未完成线程数减一
              最后在主线程调用 latch.await()/latch.await(long timeout, TimeUnit unit)
                //线程都完成后count变为0后程序才可继续执行/指定时间内count不变为0，继续执行程序

 5.jdk8新特性

 6.jvm

二.后端框架知识
1.springboot+spring+springmvc+mybatis/hibernate
2.springboot+rabbitMq、Springboot2 + Shiro + Redis + Jwt 前后端分离整合、定时任务调度_spring quartz
①springboot+rabbitMq
简单实用：https://blog.csdn.net/typ1805/article/details/82835318
面试题：https://zhuanlan.zhihu.com/p/139918749
综合：https://www.cnblogs.com/ithushuai/p/12443460.html


②Springboot2 + Shiro + Redis + Jwt 前后端分离整合

③定时任务调度_spirng quartz
